@page "/weather"
@inherits PageComponetBase<WeatherModel>

<PageTitle>Weather</PageTitle>

@if (Model.User != null)
{
    <SectionContent SectionName="header-end-button">
        <IonButton Name="Logout" OnClick="@(() => base.LogoutAsync())" />
    </SectionContent>

    <ion-content class="ion-padding">
        <h1>Weather</h1>
        <p>This component demonstrates loading data from the singleton PageModelBase.</p>

        @if (Model.Forecasts == null)
        {
            <p><em>No forecast data to show...</em></p>
        }
        else
        {
            <ion-grid size="12">
                <ion-row>
                    <ion-col size="3">
                        <strong>Date</strong>
                    </ion-col>
                    <ion-col size="3">
                        <strong>Temp. (C)</strong>
                    </ion-col>
                    <ion-col size="3">
                        <strong>Temp. (F)</strong>
                    </ion-col>
                    <ion-col size="3">
                        <strong>Summary</strong>
                    </ion-col>
                </ion-row>
                @foreach (var forecast in Model.Forecasts)
                {
                    <ion-row>
                        <ion-col size="3">@forecast.Date.ToShortDateString()</ion-col>
                        <ion-col size="3">@forecast.TemperatureC</ion-col>
                        <ion-col size="3">@forecast.TemperatureF</ion-col>
                        <ion-col size="3">@forecast.Summary</ion-col>
                    </ion-row>
                }
            </ion-grid>
        }
    </ion-content>
}

@code {
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);

        if (firstRender)
        {
            await InitializeAsync();
        }
    }

    private async Task InitializeAsync()
    {
        if (Model.User != null)
        {
            StateHasChanged();
        }

        await JsRuntime.InvokeVoidAsync("console.log", "INFORMATION: Weather page initialized.");
        await JsRuntime.InvokeVoidAsync("console.log", "INFORMATION: WeatherModel");
        await JsRuntime.InvokeVoidAsync("console.log", Model);
    }
}